package com.preowned.cars.mapper;

import com.preowned.cars.dto.CarDto;
import com.preowned.cars.entity.Car;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

@Mapper(componentModel = "spring")
public interface CarMapper {
    CarMapper CAR_MAPPER = Mappers.getMapper(CarMapper.class);
    /*
    * The code is using the MapStruct library, which is a code generation tool for Java bean mappings.
    *  It simplifies the process of mapping data between objects of different types.
    In this particular line, the Mappers.getMapper() method is used to retrieve an instance
    * of the mapper class AutoUserMapper. This mapper class is generated by MapStruct based
    * on the defined mappings and configurations.
    By assigning the returned instance to the MAPPER variable, you can utilize the mapper
    *  to perform object mappings. The mapper instance acts as a bridge between the source and target objects, providing the necessary logic to transfer data from one object to another based on the defined mapping rules.
    Once you have obtained the mapper instance, you can invoke its mapping methods to transform
    * objects. For example, you can use MAPPER.map(sourceObject) to map a source object to a target
    * object according to the defined mapping rules in the AutoUserMapper class.
    By leveraging MapStruct and using the Mappers.getMapper() method, you can benefit from
    * automatic mapping code generation, reducing the need for manual mapping implementation
    * and enhancing the maintainability and readability of your code.
    *  */

    //@Mapping(source = "email", target = "emailAddress")
    CarDto mapToCarDto(Car car);
    Car mapToCar(CarDto carDto);

//    public static CarDto mapToCarDTO(Car car, CarDto carDto) {
//        carDto.setBrandName(car.getBrandName());
//        carDto.setModelName(car.getModelName());
//        carDto.setRegNo(car.getRegNo());
//        carDto.setCarType(car.getCarType());
//        carDto.setYear(car.getYear());
//        carDto.setKms(car.getKms());
//        carDto.setPrice(car.getPrice());
//
//        return carDto;
//    }
}
